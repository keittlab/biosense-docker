#!/bin/bash

# Load SDM parameters
function loadparams() {
    source $SDMPT/etc/sdm/sdm-readparams
}

# Function to add a note to the end of the customization process
function plugin_addnote() {
    local note="$1"
    echo "$note" >> /etc/sdm/history
    echo "$note"
}

# Get the phase (0, 1, or post-install) and arguments
phase=$1
pfx="$(basename $0)"
args="$2"
vldargs="wg_ip|server_ip|server_public_key"
reqargs="wg_ip|server_ip|server_public_key"
loadparams

# Extract arguments
plugin_getargs "$pfx" "$2"

# Check if the required arguments are provided
if [ -z "$wg_ip" ]; then
    logtoboth "Error: WireGuard IP (wg_ip) is required."
    exit 1
fi

if [ -z "$server_ip" ]; then
    logtoboth "Error: Server IP (server_ip) is required."
    exit 1
fi

if [ -z "$server_public_key" ]; then
    logtoboth "Error: Server Public Key (server_public_key) is required."
    exit 1
fi

if [ "$phase" == "0" ]; then
    #
    # In Phase 0 all references to directories in the image
    # must be preceded by $SDMPT
    #
    logtoboth "* Plugin $pfx: Start Phase 0"
    logtoboth "* Plugin $pfx: Complete Phase 0"

elif [ "$phase" == "1" ]; then
    #
    # Phase 1 (in nspawn)
    #
    logtoboth "* Plugin $pfx: Phase 1"
    
    # Set an autologout timer
    echo "TMOUT=600" > /etc/profile.d/autologout.sh && \
    echo "export TMOUT" >> /etc/profile.d/autologout.sh && \
    chmod +x /etc/profile.d/autologout.sh && \
    plugin_addnote "Automatic shell logout set to 10 minutes."

    # Generate WireGuard keys
    WG_DIR="/etc/wireguard"
    mkdir -p $WG_DIR
    cd $WG_DIR

    umask 077
    wg genkey | tee privatekey | wg pubkey > publickey

    PRIVATE_KEY=$(cat privatekey)
    PUBLIC_KEY=$(cat publickey)

    # Create the client configuration
    cat > ${WG_DIR}/wg0.conf <<EOL
[Interface]
PrivateKey = ${PRIVATE_KEY}
Address = ${wg_ip}/16

[Peer]
PublicKey = ${server_public_key}
Endpoint = ${server_ip}:51820
AllowedIPs = 10.123.0.0/16
PersistentKeepalive = 25
EOL

    # Generate the command to append to the server configuration
    plugin_addnote "On the server run: sudo wg set wg0 peer ${PUBLIC_KEY} allowed-ips ${wg_ip}/32"

    logtoboth "* Plugin $pfx: Phase 1 completed"

elif [ "$phase" == "post-install" ]; then
    #
    # Post-install edits
    #
    logtoboth "* Plugin $pfx: Phase post-install"

    # Enable and start WireGuard
    systemctl enable wg-quick@wg0
    systemctl start wg-quick@wg0

    logtoboth "* Plugin $pfx: Phase post-install Completed"
fi

echo "done."
exit 0
