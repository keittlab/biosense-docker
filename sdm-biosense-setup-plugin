#!/bin/bash

# Load SDM parameters
function loadparams() {
    source "$SDMPT/etc/sdm/sdm-readparams"
}

# Function to add a note to the end of the customization process
function plugin_addnote() {
    local note="$1"
    echo "$note" >> /etc/sdm/history
    echo "$note"
}

# Get the phase (0, 1, or post-install) and arguments
phase=$1
pfx="$(basename "$0")"
args="$2"
vldargs="|wg_ip|"
reqargs="|wg_ip|"
loadparams

# Extract arguments
plugin_getargs "$pfx" "$args" "$vldargs" "$reqargs" || exit

# Log the values for debugging
logtoboth "wg_ip=${wg_ip}"

if [ "$phase" == "0" ]; then
    #
    # In Phase 0 all references to directories in the image
    # must be preceded by $SDMPT
    #
    logtoboth "* Plugin $pfx: Start Phase 0"

    # Check if there are SSH key files to copy
    if ls /home/agent/hostdir/biosense_ssh_keys/* 1> /dev/null 2>&1; then
        mkdir -p "$SDMPT/home/biosense/.ssh"
        for key_file in /home/agent/hostdir/biosense_ssh_keys/*
        do
            cp "$key_file" "$SDMPT/home/biosense/.ssh"
        done
        chown -R biosense:biosense "$SDMPT/home/biosense/.ssh"
        chmod -R go-rwx "$SDMPT/home/biosense/.ssh"

        logtoboth "Copied SSH keys to user biosense"
    else
        logtoboth "No SSH keys found, skipping copy step"
    fi

    # Copy the wg0.conf template if it exists
    if [ -f /home/agent/hostdir/config_files/wg0.conf ]; then
        mkdir -p "$SDMPT/etc/wireguard"
        cp /home/agent/hostdir/config_files/wg0.conf "$SDMPT/etc/wireguard"
        chown -R root:root "$SDMPT/etc/wireguard"
        chmod -R go-rwx "$SDMPT/etc/wireguard"
        logtoboth "Copied wg0.conf template to /etc/wireguard"
    else
        logtoboth "wg0.conf template not found, skipping copy step"
    fi

    logtoboth "* Plugin $pfx: Complete Phase 0"

elif [ "$phase" == "1" ]; then
    #
    # Phase 1 (in nspawn)
    #
    logtoboth "* Plugin $pfx: Phase 1"
    
    # Set an autologout timer
    echo "TMOUT=600" > /etc/profile.d/autologout.sh && \
    echo "export TMOUT" >> /etc/profile.d/autologout.sh && \
    chmod +x /etc/profile.d/autologout.sh && \
    plugin_addnote "Automatic shell logout set to 10 minutes."

    WG_DIR="/etc/wireguard"
    if [ -f "$WG_DIR/wg0.conf" ]; then
        # Generate WireGuard keys
        mkdir -p "$WG_DIR"
        cd "$WG_DIR" || exit
        umask 077
        wg genkey | tee privatekey | wg pubkey > publickey

        PRIVATE_KEY=$(cat privatekey)
        PUBLIC_KEY=$(cat publickey)

        # Update the client configuration
        sed -i "s|PrivateKey = .*|PrivateKey = ${PRIVATE_KEY}|" "${WG_DIR}/wg0.conf"
        sed -i "s|Address = .*|Address = ${wg_ip}/16|" "${WG_DIR}/wg0.conf"

        # Generate the command to append to the server configuration
        plugin_addnote "On the server run: sudo wg set wg0 peer ${PUBLIC_KEY} allowed-ips ${wg_ip}/32"
    else
        logtoboth "wg0.conf not found in /etc/wireguard, skipping client configuration update"
    fi

    cat > /etc/sdm/0piboot/010-config-eeprom.sh <<EOF
#!/bin/bash
rpi-eeprom-config > /tmp/bootconf.txt
echo "PSU_MAX_CURRENT=5000" >> /tmp/bootconf.txt
echo "BOOT_ORDER=0xf416" >> /tmp/bootconf.txt
sudo rpi-eeprom-config --apply /tmp/bootconf.txt
EOF
    chmod +x /etc/sdm/0piboot/010-config-eeprom.sh

    logtoboth "Created eeprom update script"

    mkdir -m 0755 -p /home/biosense/dataqueue /home/biosense/datastore
    chown biosense:biosense /home/biosense/dataqueue
    chown biosense:biosense /home/biosense/datastore

    logtoboth "Created dataqueue and datastore directories"

    logtoboth "* Plugin $pfx: Phase 1 completed"

elif [ "$phase" == "post-install" ]; then
    #
    # Post-install edits
    #
    logtoboth "* Plugin $pfx: Phase post-install"

    # Enable and start WireGuard
    systemctl enable wg-quick@wg0
    systemctl start wg-quick@wg0

    logtoboth "* Plugin $pfx: Phase post-install Completed"
fi

echo "done."
exit 0
