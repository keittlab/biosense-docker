#!/bin/bash

IMAGE_SOURCE_DIR="source_images"
IMAGE_DEST_DIR="customized_images"
OVERWRITE=0

# Function to display usage information
usage() {
    echo "Usage: $0 -f <image_file> -h <hostname> [-o]"
    echo "  -f <image_file>  : Path to the source image file."
    echo "  -h <hostname>    : Hostname for the customized image."
    echo "  -o               : Overwrite the customized image file if it exists."
    exit 1
}

# Parse command line arguments
while getopts ":f:h:o" opt; do
    case ${opt} in
        f )
            IMAGE_FILE=$OPTARG
            ;;
        h )
            IMAGE_HOSTNAME=$OPTARG
            ;;
        o )
            OVERWRITE=1
            ;;
        \? )
            echo "Invalid option: $OPTARG" 1>&2
            usage
            ;;
        : )
            echo "Invalid option: $OPTARG requires an argument" 1>&2
            usage
            ;;
    esac
done

shift $((OPTIND -1))

# Validate input parameters
if [[ -z "${IMAGE_FILE}" ]] || [[ -z "${IMAGE_HOSTNAME}" ]]; then
    echo "Both image file and hostname are required."
    usage
fi

# Check if the image file exists
if [[ ! -f "${IMAGE_FILE}" ]]; then
    echo "Image file does not exist."
    exit 1
fi

# Validate the hostname
hostname_regex="^([a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)$"
if [[ ! ${IMAGE_HOSTNAME} =~ ${hostname_regex} ]] || [[ ${#IMAGE_HOSTNAME} -lt 1 ]] || [[ ${#IMAGE_HOSTNAME} -gt 253 ]]; then
    echo "Invalid hostname. A valid hostname consists of alphanumeric characters and hyphens, and must start and end with an alphanumeric character."
    exit 1
fi

echo ""
echo "Using image file: ${IMAGE_FILE}"
echo "Using hostname: ${IMAGE_HOSTNAME}"
echo ""

IMAGE_FILE_BASE=$(basename "${IMAGE_FILE}")
CUSTOMIZED_IMAGE_FILE="./${IMAGE_DEST_DIR}/${IMAGE_HOSTNAME}-${IMAGE_FILE_BASE}"
CUSTOMIZED_IMAGE_FILE_BASE=$(basename "${CUSTOMIZED_IMAGE_FILE}")

echo "Writing to ${CUSTOMIZED_IMAGE_FILE_BASE}"
echo ""

CONTAINER_IMAGE_FILE="./hostdir/${IMAGE_SOURCE_DIR}/${IMAGE_FILE_BASE}"
CONTAINER_CUSTOMIZED_IMAGE_FILE="./hostdir/${IMAGE_DEST_DIR}/${CUSTOMIZED_IMAGE_FILE_BASE}"

# Check if the customized image file exists
if [[ -f "${CUSTOMIZED_IMAGE_FILE}" ]]; then
    if [[ ${OVERWRITE} -eq 1 ]]; then
        echo "Overwriting existing file: ${CUSTOMIZED_IMAGE_FILE}"
        cp -a -f "${IMAGE_FILE}" "${CUSTOMIZED_IMAGE_FILE}"
    else
        echo "Customized image file already exists and overwrite option not set. Exiting."
        exit 1
    fi
else
    cp -a -f "${IMAGE_FILE}" "${CUSTOMIZED_IMAGE_FILE}"
fi

DOCKER_IMAGE_NAME="biosense-sdm"

docker build -t "${DOCKER_IMAGE_NAME}" .

docker run --privileged -it --rm -v "$(pwd)":/home/agent/hostdir -v /dev:/dev "${DOCKER_IMAGE_NAME}" /bin/bash -c "
sudo sdm \
    --customize \
    --chroot \
    --plugin @/home/agent/hostdir/sdm-plugin-commands \
    --autologin \
    --regen-ssh-host-keys \
    --hostname ${IMAGE_HOSTNAME} \
    ${CONTAINER_CUSTOMIZED_IMAGE_FILE}
"

exit 0
