import os
import requests
from requests.auth import HTTPBasicAuth

# Configuration
TOKEN_URL = "https://api.1nce.com/management-api/oauth/token"
BASE_URL = "https://api.1nce.com/management-api/v1/integrate/devices"


def get_auth_token():
    """Retrieve the 1NCE API Bearer token using credentials from environment variables."""
    username = os.getenv("NCE_USERNAME")
    password = os.getenv("NCE_PASSWORD")

    if not username or not password:
        print("Error: Missing environment variables NCE_USERNAME or NCE_PASSWORD.")
        return None

    try:
        response = requests.post(
            TOKEN_URL,
            json={"grant_type": "client_credentials"},
            auth=HTTPBasicAuth(username, password),
        )
        response.raise_for_status()
        data = response.json()
        return data["access_token"]
    except requests.exceptions.RequestException as e:
        print(f"Error retrieving token: {e}")
        return None


def send_udp_message(token, device_id, udp_message, port):
    """Send a UDP message to the specified device using the 1NCE API."""
    url = f"{BASE_URL}/{device_id}/actions/UDP"
    headers = {"Authorization": f"Bearer {token}", "Content-Type": "application/json"}
    payload = {
        "payloadType": "STRING",
        "requestMode": "SEND_NOW",
        "port": port,
        "udpMessage": udp_message,
    }

    try:
        response = requests.post(url, json=payload, headers=headers)
        response.raise_for_status()
        print(f"Message sent successfully: {response.json()}")
    except requests.exceptions.RequestException as e:
        print(f"Error sending UDP message: {e}")


if __name__ == "__main__":
    # Retrieve device ID (ICCID) from environment variables
    device_id = os.getenv("NCE_ICCID")
    if not device_id:
        print("Error: Missing environment variable NCE_ICCID.")
        exit(1)

    token = get_auth_token()
    if token:
        udp_message = "Hello from 1NCE API!"
        send_udp_message(token, device_id, udp_message, "12358")
    else:
        print("Failed to retrieve access token.")
